{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Cambria;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww14200\viewh15720\viewkind0
\deftab720
\pard\pardeftab720\ri0

\f0\fs24 \cf0 Ross Lagoy\
A2. BCB 502\
02.12.15\
github.com/rlag\
openprocessing.org/user/46418\
\pard\pardeftab720\ri720

\f1 \cf0 \
\pard\pardeftab720\ri720

\b \cf0 Describe how you created / adapted your algorithm that performs hierarchal clustering of the data.\
\
\pard\pardeftab720\ri720

\b0 \cf0 I approached this assignment by developing a distance matrix in Processing of the raw zoo.data.csv file. I exported this matrix as a csv, which I then import and implement a single-link clustering algorithm in R to cluster the distance matrix values. Finally, using a function in R, I drew a resulting tree with nodes, lengths, and leaves, based on the distance values and zoo data labels.
\b \
\
Describe, at a high level, how your program draws the resulting tree based on the data.\
\

\b0 My Processing program takes a \'93zoo.data.csv\'94 file as input, which has 101 rows of different animals and 18 columns of corresponding animal characteristics. The first column is a list of animal names (strings), and the next 17 columns are integer booleans (1 or 0), or integers describing other quantitative characteristics (column 13 = number of legs; column 18 = a type); columns 1 and 18 are omitted from comparison.\
\
I begin by comparing the \'93second\'94 column of animal characteristics with itself, across all characteristics. If the comparison of integers is a match, I give it a distance score of 0, and if they mismatch, they are scored a 1. Once this row (animal) is finished comparing all 16 values, the next animal is compared to it, and continued until all 101 animals/row are evaluated against the first animal. This loop is then repeated for each animal. The data is output into \'93converted.csv\'94 that has 163,216 rows and 3 columns. These values come from there being 16 characteristics compared across 101 animals, and 101 total comparisons per animal (16 * 101 * 101 = 163,216). The three columns are (1) the animal being compared, (2) the animal compared to, and (3) the distance score for that characteristic. Next, I summed the third column in chunks of 16 for each animal comparison (101 chunks). This results in a shorter, single column file \'93distances.csv\'94 with 10,202 distance values (101 * 101 = 10, 201). An extra row is added on for an unknown reason, but it is taken care of within the next step and does not effect later functions.\
\
This file is reformatted into a matrix of 101 rows and 101 columns \'93formatted.csv\'94, forming an animal versus animal distance matrix. The extra column is removed from the 102 position in Processing. Next, the file is imported into R, which takes advantage of its single-link clustering algorithm given a distance matrix. This algorithm compares distances across individual columns and rows through 4 steps: (1) each item is assigned a cluster. The distances between the clusters are compared to the distances across the table, next (2) the closest pair of clusters (animals) are merged into a single cluster, resulting in one cluster less in the table (row minus 1 and column minus 1), then (3) distances are computed between the new merged cluster and each of the old clusters. If there are similarities in distances, they are equal to the greater similarity from this merged cluster to members of another, finally (4) steps 2 and 3 are looped until all clusters are merged, resulting in a lineage of animals with different layers of clustering. I then take advantage of Rs built in tree drawing function, plotting the resulting hierarchical tree with relative branch sizes based on their layer and distance values.\
\
Additionally, I made an interactive heat map of the raw distance matrix in Processing. A row of 101 rectangle/squares are plotted for each animal and their distance metrics from the \'93formatted.csv\'94 file. Each rectangle gets filled with a scaled number relating to the corresponding distance score. Then a new row is drawn, for the next animal, once 101 columns and rows have been filled. When animals are compared to themselves, it will result in a total distance score of 0. Therefore, the more mismatches will result in a larger distance, suggesting least related species. A mirrored matrix of values is obvious, with a diagonal from top left to bottom right of complete black squares, indicating a 100% match against itself. The gray scale portrays the range of differences in distance between animals, and can be modified by the users mouseY position on the screen. Labels get larger if you are hovered over the array. This is essentially an unsorted visual representation of the \'93formatted.csv\'94 file, where instead of numbers, its colored squares.
\b \
\
If you are using outside code for the core of your project, identify the source(s) of the code, tell me how you modified it to make it your own work.\
\

\b0 As previously mentioned, I am implementing functions in R to assist in the clustering and taking advantage of its built in plotting features for the hierarchical tree graphic. I calculated a distance matrix in Processing, and I began working on this single-linkage algorithm that currently sorts the first layer and all distance values in the distance matrix. I came to find out that once this data was clustered, Processing doesn\'92t have built in tree drawing functions, posing another technical challenge for me. Therefore, outsourcing to R was beneficial. My references are below.
\b \
\
For the free-form (beyond the requirements) component, describe the biological significance of the additions you make, describe the technical significance of the additions you make.\
\

\b0 For me, I believe I learned and accomplished a lot through this assignment, mostly overcoming technical challenges presented by the project itself. I was excited to properly calculate the distance values and format it into a 101x101 matrix with Processing, being only the third time using it on an assignment! I used prior knowledge of making phylogenetic trees from sequence data in R to plot the resulting single-link cluster of zoo data. I was excited that R had the capability to preform clustering and plotting from a distance matrix. The capabilities of Rs built in functions were resourceful. I would like to learn how to format this data into a json file and draw a tree using an already developed, and interactive, d3 template. \
\
Coming from the biology \'93bioengineering\'94 background, I\'92m happy with this accomplishment, and the display of the tree actually makes sense (compared to some confusing trees). A group of animals that branch from the same node fit with the predicted relationship across families of species (i.e. bass with chub, herring, tuna, pike, etc.). The tree is organized well with no crossing branches or labels, and legible for displaying a large number of animal data. I also prefer a horizontal tree, which, for some, is easier to interpret than a circular one\'97 this highlights the hierarchy of species relatedness by the branch length. Overall, I like these representations that make sense of the raw zoo data file.
\b \
\
Provide explicit instructions on running your program.\
\

\b0 My program can be simply run by unzipping the \'93A2_TreeOfLife\'94 folder and running the A2_TreeOfLife.pde file inside it. The resulting Processing graphic has the tree generated from R loaded onto the screen, next to the interactive heat map visualization. If you are interested in how each step of my Processing program is executed, all the csv files are printed to the data file after running. Next, the Tree.R file can be loaded into RStudio, following the comments (loading packages), and then executed. There is some manual intervention from the resulting R tree and loading it into Processing. The tree needs to be opened, saved as 900x750,  and rotated 90deg and saved, to fit properly in the Processing canvas. It is doable, but just running the Processing code after unzipping the folder should work fine.\
\
\pard\pardeftab720\ri720

\b \cf0 References\
\
\pard\pardeftab720\ri720

\b0 \cf0 http://home.deib.polimi.it/matteucc/Clustering/tutorial_html/hierarchical.html\
https://processing.org/tutorials/data/\
https://www.processing.org/reference/Table_getColumnCount_.html\
http://www.statmethods.net/advstats/cluster.html\
http://home.deib.polimi.it/matteucc/Clustering/tutorial_html/hierarchical.html
\b \uc0\u8232 }